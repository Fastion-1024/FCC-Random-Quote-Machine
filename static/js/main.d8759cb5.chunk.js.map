{"version":3,"sources":["reducer.js","context.js","Components/QuoteBox.js","Components/Authors.js","Components/Tags.js","Components/Filters.js","App.js","index.js"],"names":["actions","reducer","state","action","type","loading","error","hidden","message","payload","authors","tags","quote","sideBarHidden","selectedAuthor","name","newTags","map","tag","id","quoteCount","checked","filterByAuthor","filterByTags","forEach","total","find","author","filter","reduce","sum","Error","AppContext","React","createContext","initialState","content","AppProvider","children","useReducer","dispatch","fetchAuthors","a","fetchPage","lastPage","limit","fetch","response","json","data","newAuthors","results","_id","description","bio","page","totalPages","console","log","setError","fetchTags","fetchQuote","url","some","join","useEffect","Provider","value","openSidebar","closeSidebar","handleSelectedAuthorChange","handleSelectedTagsChange","toggleFilterByAuthor","toggleFilterByTags","resetFilters","useGlobalContext","useContext","QuoteBox","className","Container","Button","onClick","href","encodeURIComponent","target","Authors","useState","char","setChar","Form","Check","onChange","label","Group","controlId","Control","as","e","disabled","split","index","charAt","Tags","Filters","App","Row","Col","xxl","xl","lg","md","sm","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8759cb5.chunk.js","sourcesContent":["export const actions = {\r\n    LOADING: 'LOADING',\r\n    ERROR: 'ERROR',\r\n    DISPLAY_AUTHORS: 'DISPLAY_AUTHORS',\r\n    DISPLAY_TAGS: 'DISPLAY_TAGS',\r\n    DISPLAY_QUOTE: 'DISPLAY_QUOTE',\r\n    SHOW_SIDEBAR: 'SHOW_SIDEBAR',\r\n    HIDE_SIDEBAR: 'HIDE_SIDEBAR',\r\n    UPDATE_SELECTED_AUTHOR: 'UPDATE_SELECTED_AUTHOR',\r\n    SELECT_FIRST_AUTHOR: 'SELECT_FIRST_AUTHOR',\r\n    TOGGLE_TAG: 'TOGGLE_TAG',\r\n    TOGGLE_FILTER_BY_AUTHOR: 'TOGGLE_FILTER_BY_AUTHOR',\r\n    TOGGLE_FILTER_BY_TAGS: 'TOGGLE_FILTER_BY_TAGS',\r\n    RESET_FILTERS: 'RESET_FILTERS',\r\n    UPDATE_QUOTE_COUNT: 'UPDATE_QUOTE_COUNT',\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case actions.LOADING:\r\n            return { ...state, loading: true };\r\n\r\n        case actions.ERROR:\r\n            return {\r\n                ...state,\r\n                error: { hidden: false, message: action.payload },\r\n            };\r\n\r\n        case actions.DISPLAY_AUTHORS:\r\n            return {\r\n                ...state,\r\n                authors: action.payload,\r\n            };\r\n\r\n        case actions.DISPLAY_TAGS:\r\n            return {\r\n                ...state,\r\n                tags: action.payload,\r\n            };\r\n\r\n        case actions.DISPLAY_QUOTE:\r\n            return {\r\n                ...state,\r\n                quote: action.payload,\r\n            };\r\n\r\n        case actions.SHOW_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                sideBarHidden: false,\r\n            };\r\n\r\n        case actions.HIDE_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                sideBarHidden: true,\r\n            };\r\n\r\n        case actions.UPDATE_SELECTED_AUTHOR:\r\n            return {\r\n                ...state,\r\n                selectedAuthor: action.payload,\r\n            };\r\n\r\n        case actions.SELECT_FIRST_AUTHOR:\r\n            return {\r\n                ...state,\r\n                selectedAuthor: state.authors[0].name,\r\n            };\r\n\r\n        case actions.TOGGLE_TAG:\r\n            const newTags = state.tags.map((tag) => {\r\n                if (tag.id === action.payload) {\r\n                    const { id, name, quoteCount, checked } = tag;\r\n                    return { id, name, quoteCount, checked: !checked };\r\n                }\r\n                return tag;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                tags: newTags,\r\n            };\r\n\r\n        case actions.TOGGLE_FILTER_BY_AUTHOR:\r\n            return {\r\n                ...state,\r\n                filterByAuthor: !state.filterByAuthor,\r\n            };\r\n\r\n        case actions.TOGGLE_FILTER_BY_TAGS:\r\n            if (!state.filterByTags === false) {\r\n                const newTags = [...state.tags];\r\n                newTags.forEach((tag) => (tag.checked = false));\r\n                return {\r\n                    ...state,\r\n                    filterByTags: !state.filterByTags,\r\n                    tags: newTags,\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                filterByTags: !state.filterByTags,\r\n            };\r\n\r\n        case actions.RESET_FILTERS:\r\n            return {\r\n                ...state,\r\n                filterByAuthor: false,\r\n                filterByTags: false,\r\n                selectedAuthor: state.authors[0].name,\r\n                tags: state.tags.map((tag) => {\r\n                    const { id, name, quoteCount } = tag;\r\n                    return { id, name, quoteCount, checked: false };\r\n                }),\r\n                sideBarHidden: true,\r\n            };\r\n\r\n        case actions.UPDATE_QUOTE_COUNT:\r\n            let total = 0;\r\n\r\n            if (state.filterByAuthor) {\r\n                total = state.authors.find(\r\n                    (author) => author.name === state.selectedAuthor\r\n                ).quoteCount;\r\n            } else if (state.filterByTags) {\r\n                total = state.tags\r\n                    .filter((tag) => tag.checked)\r\n                    .reduce((sum, tag) => {\r\n                        return (sum += tag.quoteCount);\r\n                    }, 0);\r\n            } else {\r\n                total = state.tags.reduce((sum, tag) => {\r\n                    return (sum += tag.quoteCount);\r\n                }, 0);\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                quoteCount: total,\r\n            };\r\n\r\n        default:\r\n            throw new Error('No matching action found!');\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useContext, useEffect, useReducer } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { actions } from './reducer';\r\nimport reducer from './reducer';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: { hidden: true, message: '' },\r\n    authors: [],\r\n    selectedAuthor: '',\r\n    tags: [],\r\n    quote: { content: '', author: '' },\r\n    sideBarHidden: true,\r\n    filterByAuthor: false,\r\n    filterByTags: false,\r\n    quoteCount: 0,\r\n};\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const fetchAuthors = async () => {\r\n        dispatch({ type: actions.LOADING });\r\n\r\n        try {\r\n            // Setup variables to loop through API pages.\r\n            // We will retrieve all authors from the API\r\n            let fetchPage = 1;\r\n            let authors = [];\r\n            let lastPage = false;\r\n            let limit = 100;\r\n\r\n            while (!lastPage) {\r\n                const response = await fetch(\r\n                    `https://api.quotable.io/authors?limit=${limit}&page=${fetchPage}`\r\n                );\r\n                const data = await response.json();\r\n\r\n                const newAuthors = data.results.map((author) => {\r\n                    const { _id, name, description, bio, quoteCount } = author;\r\n                    return { id: _id, name, description, bio, quoteCount };\r\n                });\r\n\r\n                authors = [...authors, ...newAuthors];\r\n\r\n                data.page === data.totalPages ? (lastPage = true) : fetchPage++;\r\n            }\r\n\r\n            dispatch({ type: actions.DISPLAY_AUTHORS, payload: authors });\r\n            dispatch({ type: actions.SELECT_FIRST_AUTHOR });\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError('Error When Fetching Authors!');\r\n        }\r\n    };\r\n\r\n    const fetchTags = async () => {\r\n        dispatch({ type: actions.LOADING });\r\n\r\n        try {\r\n            const response = await fetch('https://api.quotable.io/tags');\r\n            const data = await response.json();\r\n\r\n            const newTags = data.map((tag) => {\r\n                const { _id, name, quoteCount } = tag;\r\n                return { id: _id, name, quoteCount, checked: false };\r\n            });\r\n\r\n            dispatch({ type: actions.DISPLAY_TAGS, payload: newTags });\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError('Error When Fetching Tags!');\r\n        }\r\n    };\r\n\r\n    const fetchQuote = async () => {\r\n        let url = 'https://api.quotable.io/random';\r\n\r\n        if (state.filterByAuthor) {\r\n            if (state.selectedAuthor === '') {\r\n                setError('Error:- No Author Selected!');\r\n            }\r\n            url += `?author=${state.selectedAuthor}`;\r\n        } else if (state.filterByTags) {\r\n            if (!state.tags.some((tag) => tag.checked)) {\r\n                setError('Error:- No Tags Selected!');\r\n            }\r\n            url += `?tags=${state.tags.filter((tag) => tag.checked).join('|')}`;\r\n        }\r\n\r\n        dispatch({ type: actions.LOADING });\r\n\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            const { content, author } = data;\r\n\r\n            dispatch({\r\n                type: actions.DISPLAY_QUOTE,\r\n                payload: { content, author },\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError('Error When Fetching Quote');\r\n        }\r\n    };\r\n\r\n    const setError = (message) => {\r\n        dispatch({ type: actions.ERROR, payload: message });\r\n    };\r\n\r\n    const openSidebar = () => {\r\n        dispatch({ type: actions.SHOW_SIDEBAR });\r\n        dispatch({ type: actions.UPDATE_QUOTE_COUNT });\r\n    };\r\n\r\n    const closeSidebar = () => {\r\n        dispatch({ type: actions.HIDE_SIDEBAR });\r\n    };\r\n\r\n    const handleSelectedAuthorChange = (name) => {\r\n        dispatch({ type: actions.UPDATE_SELECTED_AUTHOR, payload: name });\r\n        dispatch({ type: actions.UPDATE_QUOTE_COUNT });\r\n    };\r\n\r\n    const handleSelectedTagsChange = (id) => {\r\n        dispatch({ type: actions.TOGGLE_TAG, payload: id });\r\n        dispatch({ type: actions.UPDATE_QUOTE_COUNT });\r\n    };\r\n\r\n    const toggleFilterByAuthor = () => {\r\n        dispatch({ type: actions.TOGGLE_FILTER_BY_AUTHOR });\r\n        if (state.filterByTags) {\r\n            dispatch({ type: actions.TOGGLE_FILTER_BY_TAGS });\r\n        }\r\n        dispatch({ type: actions.UPDATE_QUOTE_COUNT });\r\n    };\r\n\r\n    const toggleFilterByTags = () => {\r\n        dispatch({ type: actions.TOGGLE_FILTER_BY_TAGS });\r\n        if (state.filterByAuthor) {\r\n            dispatch({ type: actions.TOGGLE_FILTER_BY_AUTHOR });\r\n        }\r\n        dispatch({ type: actions.UPDATE_QUOTE_COUNT });\r\n    };\r\n\r\n    const resetFilters = () => {\r\n        dispatch({ type: actions.RESET_FILTERS });\r\n        dispatch({ type: actions.UPDATE_QUOTE_COUNT });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAuthors();\r\n        fetchTags();\r\n        fetchQuote();\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                ...state,\r\n                openSidebar,\r\n                closeSidebar,\r\n                handleSelectedAuthorChange,\r\n                handleSelectedTagsChange,\r\n                toggleFilterByAuthor,\r\n                toggleFilterByTags,\r\n                fetchQuote,\r\n                resetFilters,\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import { useGlobalContext } from '../context';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { FaTwitter, FaFilter } from 'react-icons/fa';\r\n\r\nconst QuoteBox = () => {\r\n    const { quote, fetchQuote, openSidebar } = useGlobalContext();\r\n    return (\r\n        <section id='quote-box'>\r\n            <figure>\r\n                <blockquote className='blockquote text-center'>\r\n                    <span id='text'>{quote.content}</span>\r\n                </blockquote>\r\n                <figcaption id='author' className='blockquote-footer text-end'>\r\n                    {quote.author}\r\n                </figcaption>\r\n            </figure>\r\n\r\n            <Container className='d-flex justify-content-start'>\r\n                <Button className='secondary-btn' onClick={openSidebar}>\r\n                    <FaFilter />\r\n                </Button>\r\n\r\n                <Button\r\n                    id='tweet-quote'\r\n                    className='secondary-btn'\r\n                    href={\r\n                        'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' +\r\n                        encodeURIComponent(\r\n                            '\"' + quote.content + '\" ' + quote.author\r\n                        )\r\n                    }\r\n                    target='_blank'\r\n                >\r\n                    <FaTwitter />\r\n                </Button>\r\n            </Container>\r\n\r\n            <Button id='new-quote' onClick={fetchQuote}>\r\n                New Quote\r\n            </Button>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default QuoteBox;\r\n","import { useState } from 'react';\r\nimport { useGlobalContext } from '../context';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst Authors = () => {\r\n    const {\r\n        authors,\r\n        selectedAuthor,\r\n        handleSelectedAuthorChange,\r\n        filterByAuthor,\r\n        toggleFilterByAuthor,\r\n    } = useGlobalContext();\r\n    const [char, setChar] = useState('A');\r\n    const alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Check\r\n                checked={filterByAuthor}\r\n                onChange={toggleFilterByAuthor}\r\n                label='Filter By Author:'\r\n                className='form-switch'\r\n            />\r\n            <Form.Group controlId='formAlphaSelect'>\r\n                <Form.Control\r\n                    as='select'\r\n                    className='form-select'\r\n                    onChange={(e) => setChar(e.target.value)}\r\n                    disabled={!filterByAuthor}\r\n                >\r\n                    {alpha.split('').map((char, index) => {\r\n                        return <option key={index}>{char}</option>;\r\n                    })}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='formAuthors'>\r\n                <Form.Control\r\n                    as='select'\r\n                    className='form-select'\r\n                    onChange={(e) => handleSelectedAuthorChange(e.target.value)}\r\n                    value={selectedAuthor}\r\n                    disabled={!filterByAuthor}\r\n                >\r\n                    {authors\r\n                        .filter((author) => author.name.charAt(0) === char)\r\n                        .map((author) => {\r\n                            const { id, name, quoteCount } = author;\r\n                            return (\r\n                                <option key={id} value={name}>\r\n                                    {name}\r\n                                </option>\r\n                            );\r\n                        })}\r\n                </Form.Control>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default Authors;\r\n","import { useGlobalContext } from '../context';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst Tags = () => {\r\n    const { tags, handleSelectedTagsChange, filterByTags, toggleFilterByTags } =\r\n        useGlobalContext();\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Check\r\n                checked={filterByTags}\r\n                onChange={toggleFilterByTags}\r\n                label='Filter By Tags:'\r\n                className='form-switch'\r\n            />\r\n            <Form.Group controlId='formTags'>\r\n                {tags.map((tag) => {\r\n                    const { id, name } = tag;\r\n                    return (\r\n                        <Form.Check\r\n                            key={id}\r\n                            id={id}\r\n                            type='checkbox'\r\n                            label={name}\r\n                            checked={tag.checked}\r\n                            onChange={(e) =>\r\n                                handleSelectedTagsChange(e.target.id)\r\n                            }\r\n                            disabled={!filterByTags}\r\n                        />\r\n                    );\r\n                })}\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default Tags;\r\n","import { useGlobalContext } from '../context';\r\nimport Authors from './Authors';\r\nimport Tags from './Tags';\r\nimport { FaUndoAlt, FaCheck } from 'react-icons/fa';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst Filters = () => {\r\n    const { sideBarHidden, closeSidebar, resetFilters, quoteCount } =\r\n        useGlobalContext();\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`${\r\n                    sideBarHidden ? 'modal-blur' : 'modal-blur show-modal-blur'\r\n                }`}\r\n            />\r\n            <aside\r\n                className={`${\r\n                    sideBarHidden ? 'sidebar' : 'sidebar show-sidebar'\r\n                }`}\r\n            >\r\n                <h2 className='sidebar-header'>Filters</h2>\r\n\r\n                <Authors />\r\n                <h3>Or</h3>\r\n                <Tags />\r\n\r\n                <h3 className='text-center'>Matching Quotes: {quoteCount} </h3>\r\n\r\n                <Container className='d-flex justify-content-around filter-controls-container'>\r\n                    <Button className='secondary-btn' onClick={resetFilters}>\r\n                        <FaUndoAlt />\r\n                    </Button>\r\n                    <Button className='secondary-btn' onClick={closeSidebar}>\r\n                        <FaCheck />\r\n                    </Button>\r\n                </Container>\r\n            </aside>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Filters;\r\n","import QuoteBox from './Components/QuoteBox';\r\nimport Filters from './Components/Filters';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction App() {\r\n    return (\r\n        <main>\r\n            <div className='background' />\r\n            <Container className='full-height'>\r\n                <Row className='d-flex full-height justify-content-center align-items-center'>\r\n                    <Col\r\n                        xxl={5}\r\n                        xl={6}\r\n                        lg={6}\r\n                        md={7}\r\n                        sm={8}\r\n                        xs={9}\r\n                        className='align-self-center'\r\n                    >\r\n                        <QuoteBox />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Filters />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { AppProvider } from './context';\r\nimport './Styles/index.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppProvider>\r\n            <App />\r\n        </AppProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}